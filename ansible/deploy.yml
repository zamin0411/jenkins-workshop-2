---
- name: Deploy application
  hosts: all
  become: no
  vars:
    deploy_date: "{{ '%04d%02d%02d' | format(ansible_date_time.year | int, ansible_date_time.month | int, ansible_date_time.day | int) }}"
    deploy_user: "{{ ansible_user | default('newbie') }}"
    deploy_path: "/usr/share/nginx/html/jenkins/{{ ansible_user_folder | default('manhg2') }}"
    jenkins_job_name: "{{ ansible_user_folder | default('manhg2') }}"
    source_project_path: "/var/jenkins_home/workspace/workshop2/web-performance-project1-initial"
    project_folder: "web-performance-project1-initial"
    deploy_folder: "{{ deploy_path }}/deploy/{{ deploy_date }}"
    max_releases: 5

  tasks:
    - name: Debug paths
      debug:
        msg: |
          Jenkins job name: {{ jenkins_job_name }}
          Source project path: {{ source_project_path }}
          Deploy path: {{ deploy_path }}
          Project folder: {{ project_folder }}
          Deploy folder: {{ deploy_folder }}
    - name: Check if user directory exists
      stat:
        path: "{{ deploy_path }}"
      register: user_dir_stat

    - name: Create user directory if not exists
      file:
        path: "{{ deploy_path }}"
        state: directory
        mode: '0755'
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
      when: not user_dir_stat.stat.exists

    - name: Create project directory
      file:
        path: "{{ deploy_path }}/{{ project_folder }}"
        state: directory
        mode: '0755'
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"

    - name: Create deploy directory structure
      file:
        path: "{{ deploy_path }}/deploy"
        state: directory
        mode: '0755'
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"

    - name: List Jenkins workspace directories
      command: ls -la /var/jenkins_home/workspace/
      register: workspace_list
      ignore_errors: true

    - name: Debug workspace directories
      debug:
        var: workspace_list.stdout_lines

    - name: Check if source project exists
      stat:
        path: "{{ source_project_path }}"
      register: source_project_stat

    - name: Debug source project check
      debug:
        msg: "Source project exists: {{ source_project_stat.stat.exists }}"

    - name: Find correct workspace path
      find:
        paths: "/var/jenkins_home/workspace"
        patterns: "*"
        file_type: directory
      register: workspace_dirs
      when: not source_project_stat.stat.exists

    - name: Debug found workspace directories
      debug:
        var: workspace_dirs.files
      when: not source_project_stat.stat.exists

    - name: Set dynamic source path
      set_fact:
        source_project_path: "{{ item.path }}/web-performance-project1-initial"
      when: not source_project_stat.stat.exists
      loop: "{{ workspace_dirs.files | default([]) }}"
      register: dynamic_paths
      ignore_errors: true

    - name: Debug dynamic source paths
      debug:
        var: dynamic_paths.results
      when: not source_project_stat.stat.exists

    - name: Create deploy directory
      file:
        path: "{{ deploy_folder }}"
        state: directory
        mode: '0755'
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"

    - name: Copy index.html
      copy:
        src: "{{ source_project_path }}/index.html"
        dest: "{{ deploy_folder }}/index.html"
        mode: '0644'
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"

    - name: Copy 404.html
      copy:
        src: "{{ source_project_path }}/404.html"
        dest: "{{ deploy_folder }}/404.html"
        mode: '0644'
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"

    - name: Copy css directory
      copy:
        src: "{{ source_project_path }}/css/"
        dest: "{{ deploy_folder }}/css/"
        mode: '0755'
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"

    - name: Copy js directory
      copy:
        src: "{{ source_project_path }}/js/"
        dest: "{{ deploy_folder }}/js/"
        mode: '0755'
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"

    - name: Copy images directory
      copy:
        src: "{{ source_project_path }}/images/"
        dest: "{{ deploy_folder }}/images/"
        mode: '0755'
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"

    - name: Run test script (if exists)
      command: "{{ source_project_path }}/test/test.sh"
      args:
        chdir: "{{ source_project_path }}"
      register: test_result
      failed_when: test_result.rc != 0
      ignore_errors: true

    - name: Create symlink to current
      file:
        src: "{{ deploy_folder }}"
        dest: "{{ deploy_path }}/deploy/current"
        state: link
        owner: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"
        group: "{{ 'newbie' if ansible_connection != 'local' else 'jenkins' }}"

    - name: Get list of release directories
      find:
        paths: "{{ deploy_path }}/deploy"
        patterns: "20*"
        file_type: directory
      register: release_dirs

    - name: Remove old releases (keep only {{ max_releases }})
      file:
        path: "{{ item.path }}"
        state: absent
      when: release_dirs.matched > (max_releases | int)
      loop: "{{ (release_dirs.files | sort(attribute='path', reverse=true))[(max_releases | int):] }}"

    - name: Check nginx status
      service:
        name: nginx
        state: started
      when: ansible_connection != 'local'

    - name: Display deployment info
      debug:
        msg: |
          Deployment completed successfully!
          Date: {{ deploy_date }}
          Project folder: {{ project_folder }}
          Deploy path: {{ deploy_folder }}
          Current symlink: {{ deploy_path }}/deploy/current
